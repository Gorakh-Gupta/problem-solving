class Solution {
public:
    
int t[200000+1];
    
void build(int a[], int v, int tl, int tr) {
    if (tl == tr) {
        t[v] = a[tl];
    } else {
        int tm = (tl + tr) / 2;
        build(a, v*2+1, tl, tm);
        build(a, v*2+2, tm+1, tr);
        t[v] = 0;
    }
}

    
void update(int v, int tl, int tr, int l, int r, int add) {
    if (l > r)
        return;
    if (l == tl && r == tr) {
        t[v] += add;
    } else {
        int tm = (tl + tr) / 2;
        update(v*2+1, tl, tm, l, min(r, tm), add);
        update(v*2+2, tm+1, tr, max(l, tm+1), r, add);
    }
}

int get(int v, int tl, int tr, int pos) {
    if (tl == tr)
        return t[v];
    int tm = (tl + tr) / 2;
    if (pos <= tm)
        return t[v] + get(v*2+1, tl, tm, pos);
    else
        return t[v] + get(v*2+2, tm+1, tr, pos);
}

    
string shiftingLetters(string s, vector<vector<int>>& shifts) {
        
        int n = s.size();
        int arr[n];
        memset(arr,0,sizeof arr);
        build(arr,0,0,n-1);
        for(auto x:shifts){
            int l = x[0];
            int r = x[1];
            int val = x[2];
            if(val ==0)val = -1;
            update(0,0,n-1,l,r,val);
        }
        
        string ans ;
        for(int i=0;i<n;i++){
            int j = get(0,0,n-1,i);
            //cout<<j<<" ";
            int h = s[i]-'a';
            h+=j;
            while(h<0)h+=26;
            h%=26;
            ans+= 'a'+h;
        }
        return ans;
    }
};
