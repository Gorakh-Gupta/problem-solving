class Solution {
public:
    vector<int> deckRevealedIncreasing(vector<int>& deck) {
        sort(deck.begin(), deck.end());
        queue<int>q;
        for(int i=0;i<deck.size();i++)q.push(i);
        vector<int> result(deck.size());
        for (int i = 0; i < deck.size(); i++) {
            // Reveal Card
            result[q.front()] = deck[i];
            q.pop();

            // Move next card to bottom
            if (!q.empty()) {
                q.push(q.front());
                q.pop();
            }
        }
        return result;
    }
};
