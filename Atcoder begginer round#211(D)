//No of shortest paths from 1 to last node


#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define PII pair<ll,ll>
const ll mod=1e9+7;
#define pk pop_back
#define pb push_back
const int dx[]={0,-1,1,0};
const int dy[]={1,0,0,-1};
const ll inf =1e18;

int main() {
  int n, m;
  cin >> n >> m;
  
  vector<ll>to[n];
  for(int i=0;i< m;i++) {
    int a, b;
    cin >> a >> b;
    --a; --b;
    to[a].push_back(b);
    to[b].push_back(a);
  }
  
  queue<int> q;
  vector<int> dist(n, -1);
  vector<int> ways(n, 0);
  dist[0] = 0;
  ways[0]=1;
  q.push(0);

  while (!q.empty()) {
    int v = q.front(); q.pop();
    for (int u : to[v]) {
      if (dist[u] == -1){
        dist[u]=dist[v]+1;
        ways [u]=ways[v];
        q.push(u);
      }
      else if(dist [u]==dist[v]+1)
      {
        ways[u]+=ways[v];
      }
      ways[u]%=mod;
    }}

      cout<<ways[n-1];}
